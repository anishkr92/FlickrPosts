//
//  FlickrPostsViewController.swift
//  FlickrPosts
//
//  Created by Anish Kumar on 07/12/19.
//  Copyright (c) 2019 Anish Kumar. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire
import AlamofireImage

protocol FlickrPostsDisplayLogic: class
{
    func displayPosts(viewModel: FlickrPosts.ViewModel)
}

class FlickrPostsViewController: UIViewController, FlickrPostsDisplayLogic
{
    var interactor: FlickrPostsBusinessLogic?
    var router: (NSObjectProtocol & FlickrPostsRoutingLogic & FlickrPostsDataPassing)?
    
    var flickrPosts = [FlickrPosts.ViewModel.PostVM]()
    
    // MARK: Outlets
    @IBOutlet weak var postsTableView: UITableView!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = FlickrPostsInteractor()
        let presenter = FlickrPostsPresenter()
        let router = FlickrPostsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        showPosts()
    }
    
    // MARK: Show Posts
    
    func showPosts() {
        let request = FlickrPosts.Request(text: "shirts")
        interactor?.showPosts(request: request)
    }
    
    func displayPosts(viewModel: FlickrPosts.ViewModel) {
        self.flickrPosts = viewModel.posts
        self.postsTableView.reloadData()
    }
}

extension FlickrPostsViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return flickrPosts.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "FlickrPostTableViewCell", for: indexPath) as! FlickrPostTableViewCell
        let post = flickrPosts[indexPath.row]
        cell.titleTextLabel.text = post.title
        cell.postImageHeightConstraint.constant = CGFloat(post.height)
        cell.postImageWidthConstraint.constant = CGFloat(post.width)
        cell.postImageView.image = nil
        
        // load image for the cell asynchronously
        Alamofire.request(post.url).responseImage { (dataResponse) in
            guard dataResponse.result.isSuccess else {
                return
            }
            
            cell.postImageView.image = dataResponse.result.value
        }
        
        return cell
    }
}
